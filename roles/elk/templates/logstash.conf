input {
    kafka {
      bootstrap_servers => "{%for h in groups['kafka']%} {{h}}:9092{% if not loop.last %}, {% endif %} {%endfor%}"
      topics => ["e2e-log","dev-log","performance-log","qa-log","stress-log"]
    }
}
filter {
  json {
    source => "message"
  }
}
filter {

if [message] =~ "pipeline launch elapse" {
    grok {
      match => {
            "message" => "(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}\[(?<app>.*?),(?<trace_id>.*?),(?<span_id>.*?),(?<is_tracing>.*?)\].*pipeline%{SPACE}name%{SPACE}=%{SPACE} (?<pipeline_name>.*?), .*elapse%{SPACE}=%{SPACE} %{NUMBER:elapse}"
            "source" => "^/data/gocd/logs/\w+/(?<pod_name>.*?)\.log"
        }
        add_field => {
          "received_at"=>"%{@timestamp}"
          "pod_name" => "%{pod_name}"
        }
        #add_field => [ "received_from", "%{host}" ]
    }

    mutate {
       convert => { "elapse" => "integer" }
    }

  }else{
    grok {
        match => {
            "message" => "(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}\[(?<app>.*?),(?<trace_id>.*?),(?<span_id>.*?),(?<is_tracing>.*?)\]"
            "source" => "^/data/gocd/logs/\w+/(?<pod_name>.*?)\.log"
        }
        add_field => {
          "received_at"=>"%{@timestamp}"
          "pod_name" => "%{pod_name}"
        }
        #add_field => [ "received_from", "%{host}" ]
    }
  }

}
output {
  #stdout { codec => rubydebug }
    elasticsearch {
     hosts => ['{{groups['elasticsearch-servers'] | join("','")}}']
     index => "logstash-gocd-%{+YYYY.MM.dd}"
     document_type => "gocd"
    }
}
